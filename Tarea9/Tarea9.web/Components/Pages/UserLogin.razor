@page "/"
@page "/login"
@using Microsoft.EntityFrameworkCore
@using Tarea9.Web.Components.Data
@using Tarea9.web.Components.Models
@inject DataContext Dc
@inject IJSRuntime Jsx
@inject NavigationManager Navigation
@inject EstadoCompartido Estado

<PageTitle>Login</PageTitle>



<div class="background-container">
    <div class="left">
        <div class="form-container">

            <form @onsubmit="Buscarlogin" class="editform">

                <h3>Iniciar Sesión</h3>
                <h4 class="label2">@MensajeIncorrectos</h4>

                <div class="form-group mt-3">
                    <label class="@datosIncorrectos" for="username">Usuario</label>
                    <input class="form-control form-control-lg input" id="username" @bind="login.Usuario" />
                </div>

                <div class="form-group mt-3">
                    <label class="@datosIncorrectos" for="password">Contraseña</label>
                    <input class="form-control form-control-lg input" id="password" type="password" @bind="login.Contrasena" />
                </div>

                <div class="form-group mt-3 button-iniciar-container">
                    <button class="boton-iniciar" type="submit">Iniciar</button>
                </div>

            </form>
            <div class="letrasbottom">
                <p>
                    Aun no tengo una cuenta
                    <a class="linkcrear" href="singIn">Crear Cuenta</a>
                </p>

            </div>

        </div>
    </div>
    <div class="right"></div>
    
</div>




@code {


    private ClaseLogin login = new ClaseLogin();




    private string? datosIncorrectos = "label";

    private string? MensajeIncorrectos;

    private async Task DatosIncorrecotos()
    {
        datosIncorrectos = "label2";
        MensajeIncorrectos = "Datos Incorrectos";
        StateHasChanged();
        await Task.Delay(2000);
        datosIncorrectos = "label";
        MensajeIncorrectos = "";
        StateHasChanged();


    }


    private async Task Buscarlogin()
    {
        if (string.IsNullOrWhiteSpace(login.Usuario) || string.IsNullOrWhiteSpace(login.Contrasena))
        {
            await Jsx.InvokeVoidAsync("alert", "Por favor, completa todos los campos.");
            return;
        }

        var usuario = await Dc.ColeccionInicioSecion
        .FirstOrDefaultAsync(u => u.Usuario == login.Usuario && u.Contrasena == login.Contrasena);

        if (usuario != null)
        {
            SessionService.UsuarioActualId = usuario.Id.ToString() ;
            await Jsx.InvokeVoidAsync("alert", "Inicio de sesión exitoso");
            Navigation.NavigateTo("/dashboard");
            CambiarNumero();

        }
        else
        {
            // await Jsx.InvokeVoidAsync("alert", "Usuario o contraseña incorrectos");
            DatosIncorrecotos();


        }
    }

    private void CambiarNumero()
    {
        Estado.Link = "dashboard";
    }

    
}
