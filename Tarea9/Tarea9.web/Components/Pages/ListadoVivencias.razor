@page "/listadovivencias"
@using Tarea9.web.Components.Models
@using Tarea9.Web.Components.Data
@inject NavigationManager Nav
@inject DataContext Dc
@rendermode InteractiveServer
@inject IJSRuntime Jsx

<h1>Listado de vivencias</h1>

<div class="text-end">
    <button class="btn btn-primary" @onclick="AgregarNuevo">¿Agregar Nueva vivencia?</button>
    <button class="btn btn-danger ms-2" @onclick="MostrarDialogo">Borrar todas las vivencias</button>
</div>

<dialog id="dialogoMensaje">
    <p>Estas seguro de que quieres borrar todas tus vivencias</p>
    <button @onclick="CerrarDialogo">Calcelar</button>
    <button @onclick="BorrarTodasLasVivencias">Cerrar</button>
</dialog>

@foreach (var item in listavivencias)
        {
    item.DefaultUrl();
    item.DefaultText();
    <div class="card cardmodifyson" style="width: 18rem;">
        <img src="@item.Url" class="card-img-top" alt="@item.TextoImagen">
        <div class="card-body cadarbodywith">
            <h5 class="card-title">@item.Titulo</h5>
            <p class="card-text">@item.Descripcion</p>
            <h6 class="card-subtitle mb-2 text-body-secondary">Fecha de creacion: @item.FechaVivencia</h6>
            <h6 class="card-subtitle mb-2 text-body-secondary">Ultima modificacion @item.UltimaModificacion</h6>
        </div>
    </div>
        }

@code {
    List<Vivencias> listavivencias = new List<Vivencias>();

    private void AgregarNuevo()
    {
        Nav.NavigateTo("registrovivencias");
    }


    private async Task BorrarTodasLasVivencias()
    {
        var usuarioId = SessionService.UsuarioActualId;


        var vivenciasUsuario = Dc.Coleccionvivivencias
            .Where(v => v.UsuarioId == usuarioId);

        Dc.Coleccionvivivencias.RemoveRange(vivenciasUsuario);
        await Dc.SaveChangesAsync();


        listavivencias = Dc.Coleccionvivivencias
            .Where(v => v.UsuarioId == usuarioId)
            .ToList();


        CerrarDialogo();
        StateHasChanged();
    }

    protected override void OnInitialized()
    {
        listavivencias = Dc.Coleccionvivivencias
        .Where(v => v.UsuarioId == SessionService.UsuarioActualId)
        .ToList();

    }

    private ElementReference dialogo;

    private async Task MostrarDialogo()
    {
        await Jsx.InvokeVoidAsync("eval", "document.getElementById('dialogoMensaje').showModal()");
    }

    private async Task CerrarDialogo()
    {
        await Jsx.InvokeVoidAsync("eval", "document.getElementById('dialogoMensaje').close()");
    }

}
