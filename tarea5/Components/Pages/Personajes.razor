@page "/personajes"
@rendermode InteractiveServer
@inject VideoJuegosContext Sc
@using Microsoft.EntityFrameworkCore;
@inject NavigationManager NavMan


<h3>Personajes</h3>

<div class="text-end">
    <button type="button" @onclick="agregarNuevo" class="btn btn-primary">
        Agregar Personaje
    </button>
</div>
<br>
<table class="table table-dark table-striped">
    <thead>
        <tr>

            <th>Nombre</th>
            <th>Alias</th>
            <th>Rol</th>
            <th>Habilidad</th>
            <th>Arma Favorita</th>
            <th>Nivel de poder</th>
            <th>Foto</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in listaDeClasePersonaje)
        {
            <tr>

                <td>@item.Nombre</td>
                <td>@item.Alias</td>
                <td>@item.Rol</td>
                <td>@item.Habilidad</td>
                <td>@item.ArmaFavorita</td>
                <td>@item.NivelDePoder</td>
                <td><img src="@item.FotoDelPersonaje" alt="@item.Nombre" width="100"></td>
                <td>
                    <button class="btn btn-warning" @onclick="()=>editar(item.Id_personaje)">
                        Editar
                    </button>
                    <button class="btn btn-danger" @onclick="() => eliminar(item.Id_personaje)">
                        Eliminar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {

    List<ClasePersonaje> listaDeClasePersonaje = new List<ClasePersonaje>();

    private void agregarNuevo() {
        NavMan.NavigateTo("personajes/editar"); 
    }

    private void editar(int id) {
        NavMan.NavigateTo($"personajes/editar/{id}"); 
    }

    private async Task eliminar(int id) {
        var item = listaDeClasePersonaje.FirstOrDefault(x => x.Id_personaje == id);
        if (item != null) {
            // Elimina el elemento de la base de datos
            Sc.ColecciondeEntidadesClasePersonajes.Remove(item);
            await Sc.SaveChangesAsync();

            // Actualiza la lista local
            listaDeClasePersonaje.Remove(item);
            StateHasChanged();
        }
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender) { 
        if (firstRender) {
            listaDeClasePersonaje = await Sc.ColecciondeEntidadesClasePersonajes.ToListAsync();
            StateHasChanged();
        }
    }

}