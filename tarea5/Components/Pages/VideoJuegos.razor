@page "/videojuegos"
@inject NavigationManager NavMan
@rendermode InteractiveServer
@inject VideoJuegosContext Sc
@using Microsoft.EntityFrameworkCore;

<h2>Video Juegos</h2>

<div class="text-end">
    <button type="button" @onclick="agregarNuevo" class="btn btn-primary">
        Agregar
    </button>
</div>

<h3>Agregados</h3>

<table class="table table-dark table-striped">
    <thead>
        <tr>
            <th scope="col">Nombre</th>
            <th scope="col">Desarrollador</th>
            <th scope="col">Plataforma</th>
            <th scope="col">Genero</th>
            <th scope="col">Fecha</th>
            <th scope="col">Foto</th>
            <th scope="col">Descripcion</th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in listadeClaseVideoJuego)
        {
            <tr>
                <td>@item.Nombre</td>
                <td>@item.Desarrollador</td>
                <td>@item.Plataforma</td>
                <td>@item.Genero</td>
                <td>@item.FechaDeLanzamiento</td>
                <td><img src="@item.ImagenDePortada" alt="@item.Nombre" width="100"></td>
                <td>@item.Descripcion</td>
                <td>
                    <button class="btn btn-warning" @onclick="()=>editar(item.Id)">
                        Editar
                    </button>
                    <button class="btn btn-danger" @onclick="() => eliminar(item.Id)">
                        Eliminar
                    </button>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    List<ClaseVideoJuegos> listadeClaseVideoJuego = new List<ClaseVideoJuegos>();

    private void agregarNuevo() {
        NavMan.NavigateTo("videojuegos/editar"); 
    }

    private void editar(int id) {
        NavMan.NavigateTo($"videojuegos/editar/{id}"); 
    }

    private async Task eliminar(int id) {
        var item = listadeClaseVideoJuego.FirstOrDefault(x => x.Id == id);
        if (item != null) {
            // Elimina el elemento de la base de datos
            Sc.ColecciondeEntidadesClaseVideoJuegos.Remove(item);
            await Sc.SaveChangesAsync();

            // Actualiza la lista local
            listadeClaseVideoJuego.Remove(item);
            StateHasChanged();
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender) { 
        if (firstRender) {
            listadeClaseVideoJuego = await Sc.ColecciondeEntidadesClaseVideoJuegos.ToListAsync();
            StateHasChanged();
        }
    }
}
